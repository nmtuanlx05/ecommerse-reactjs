@import '@styles/_mixins.module.scss';
@import '@styles/_variable.module.scss';

.container {
    @include flex_box_custom(center, center, 0px);
    // background-color: bisque;

    top: 0;
    left: 0;
    right: 0;
}

.topHeader {
    position: absolute;
}

.fixedHeader {
    position: fixed;
    top: -83px;
    background-color: #ffffffe6;
    z-index: 999;
    box-shadow: 2px 0 12px 0 rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(5px);
    transform: translateY(83px);
    transition: transform 0.5s ease;
}

.containerHeader {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 83px;
    width: 1250px;
}

.containerBoxIcon {
    @include flex_box_custom(center, center, 17px);

    p {
        cursor: pointer;
    }
}

.containerBox {
    @include flex_box_custom(center, center, 20px);
}

.containerMenu {
    @include flex_box_custom(center, center, 38px);
}

.boxIcon {
    @include radius_common(50%);
    @include flex_box_custom(center, center, 0px);
    background-color: $primary_color;
    width: 26px;
    height: 26px;
    cursor: pointer;
}

.menu {
    cursor: pointer;
    padding-top: 10px;
    font-size: 15px;
    color: $primary_color;
    position: relative;

    .subMenu {
        position: absolute;
        background-color: #fff;
        top: 40px;
        padding: 10px;
        width: 100%;
    }
}

.menu::after {
    content: '';
    display: block;
    height: 3px;
    background-color: $primary_color;
    transform-origin: right;
    transform: scale(0);
    opacity: 0;
    margin-top: 5px;
    transition: transform 300ms, opacity 500ms;
}
.menu:hover::after {
    transform: scale(1);
    opacity: 1;
}

.boxCart {
    position: relative;

    .quantity {
        position: absolute;
        top: -5px;
        right: -8px;
        background-color: $primary_color;
        color: #fff;
        @include radius_common(50%);
        width: 15px;
        height: 15px;
        @include flex_box_custom(center, center, 0px);
        font-size: 10px;
        cursor: pointer;
    }
}
